Author: Tilman Rassy <rassy@math.tu-berlin.de>
$Id: INSTALL,v 1.3 2007/10/05 15:53:14 rassy Exp $
Copyright (C) 2003 - 2006, Berlin University of Technology



                   JAPS DATASHEET INSTALLATION INSTRUCTIONS



1.Requirements
  ============

  1.1. Java SDK 1.4.2_10 or better.

  1.2. Ant 1.6.2. Other (but not too old) versions probably work, too.


2. Installation location
   =====================

All files are installed under a directory <prefix> which defaults to
/usr/local. If you want to change the default, you have two options:

  2.1. Set the environment variable MM_BUILD_PREFIX, and give it the value
       <my-prefix>, where <my-prefix> is the directory where you want the files
       to be installed. This option has the advantage that MM_BUILD_PREFIX is
       recognized by other build scripts of the MUMIE project, too.

  2.2. Change to the root directory of the Japs Datasheet distribution (the
       directory this file is in), create a file named build.conf and add 
       the following line to it: 

         prefix=<my-prefix>

       Remark: The build and installation are done by a Bash script which reads
       the file build.conf by means of the 'source' command. Thus, you can use
       shell substitution in build.conf. E.g.,

         prefix=$HOME

       would set the installation location to your home directory.

If <prefix> is set both in build.conf and by the environment variable
MM_BUILD_PREFIX, the setting in build.conf takes precedence.


3. Checkin file location
   =====================

The master and content files of the Japs datasheet package are placed in

  <checkin-root>/system/libraries

where <checkin-root> is the root directory of the global checkin tree. It
defaults to $HOME/mumie/checkin, where $HOME is your home directory. If you
want to change this, you have two options, similar as with the installation
location:

  3.1. Set the environment variable MM_CHECKIN_ROOT, and give it the value
       <my-checkin-root>, where the latter is the directory where you want the
       checkin files to be placed. This option has the advantage that
       MM_CHECKIN_ROOT is recognized by other build scripts of the MUMIE
       project, too.

  3.2. Add the following line to the file build.conf (cf. 2.2.):

         checkin_root=<my-checkin-root>

If <checkin-root> is set both in build.conf and by the environment variable
MM_CHECKIN_ROOTq, the setting in build.conf takes precedence.


4. Keys for jar signing
   ====================

During the build, some of the jars are signed. To this end, a key pair must
exist in the Java keystore. If you do not have a key pair yet, create one with
Java's 'keytool' program. The build process must know the corresponding alias
and password. To achieve this, add the following lines to your build.conf file
(cf. 2.2.):

  signjar_alias=<alias>
  signjar_storepass=<password>

<alias> is the alias of the key pair. <password> is the password of the
keystore. - PLEASE NOTE: The key pair can have a separate password distinct
from that of the keystore; but currently the build assumes that this option is
not used.


5. Build and installation
   ======================

  5.1. Change to the root directory of the Japs Datasheet distribution (the
       directory this file is in).   

  5.2. Type

         $ ./build.sh

       This builds the Japs Datasheet. 

  5.4. Make sure you have write permission in <prefix>. Switch user to root if
       necessary.

  5.5. Type

         $ ./build.sh install

       This installs Japs Datasheet.

Remark: build.sh is Japs Datasheet's build script. To get more information about it,
type

  $ ./build.sh -h


6. Checkin files
   =============

To add the master and content files of the Japs datasheet pacjage to the global
checkin tree, type

 $ ./build.sh mount-checkin

This will create two softlinks in <checkin-root>/system/libraries,

  jar_datasheet.meta.xml  and  jar_datasheet.content.jar,

which point to

  <base>/checkin/system/libraries/jar_datasheet.meta.xml

and

  <base>/checkin/system/libraries/jar_datasheet.content.jar,

respectively. The latter is again a softlink to

  ../../../lib/java/mumie-japs-datasheet.jar.


7. Post-installation setup
   =======================

If you want to use the Japs datasheet library, make sure

  <prefix>/lib/java/mumie-japs-datasheet.jar

is in your classpath.


-- END OF FILE --