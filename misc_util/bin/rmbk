#! /bin/bash

# The MIT License (MIT)
# 
# Copyright (c) 2010 Technische Universitaet Berlin
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Author:  Tilman Rassy <rassy@math.tu-berlin.de>

# $Id: rmbk,v 1.1.1.1 2009/07/03 11:35:49 rassy Exp $

# Set fixed variabes (constants):
readonly program_name=rmbk
readonly program_version='$Revision: 1.1.1.1 $'

# Default task:
task=remove_backups

# Aborts with an error message
function error
  {
    echo "ERROR: $*" >&2
    echo
    exit 1
  }

# Main task, removes the backups
function remove_backups
  {
    local find_opts="-L"
    local rm_opts=""
    [ "$quiet" ] || rm_opts="$rm_opts -v"
    [ "$recursive" ] || find_opts="$find_opts -maxdepth 1"
    find $find_opts -name "*~" -exec rm $rm_opts \{\} \;
  }

# Prints a help text
function show_help
  {
cat <<EOF
Usage:
  $program_name [--recursive | -r] [--quiet | -q]
  $program_name --help | -h | --version | -v
Description:
  Delets backup files, i.e., files whose names end with a "~". By default, all
  backup files in the current directory are deleted. With the --recursive or -r
  option, subdirectories are processed recursively.
Options:
  --recursive, -r
      Work recursively
  --quiet, -q
      Suppress messages to stdout
  --help, -h
      Print this help text to stdout and exit
  --version, -v
      Print version information and exit
EOF
  }

# Prints version information
function show_version
  {
    echo $program_version
  }

# Process command line parameters:
params=`getopt \
  --longoptions recursive,quiet,help,version \
  --options r,q,h,v \
  -- \
  "$@"`
if [ $? -ne 0 ] ; then exit 1 ; fi
eval set -- "$params"
while true ; do
  case "$1" in
    --help|-h) task=show_help ; shift ;;
    --version|-v) task=show_version ; shift ;;
    --recursive|-r) recursive=recursive ; shift ;;
    --quiet|-q) quiet=quiet ; shift ;;
    --) shift ; break ;;
  esac
done
[ "$@" ] && error "Extra parameter(s): $@"

$task
