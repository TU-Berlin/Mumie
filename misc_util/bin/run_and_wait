#! /bin/bash

# The MIT License (MIT)
# 
# Copyright (c) 2010 Technische Universitaet Berlin
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Author: Tilman Rassy <rassy@math.tu-berlin.de>
# $Id: run_and_wait,v 1.1.1.1 2009/07/03 11:35:49 rassy Exp $

# Author: Tilman Rassy <rassy@math.tu-berlin.de>
# $Id: run_and_wait,v 1.1.1.1 2009/07/03 11:35:49 rassy Exp $

# Executes a certain command and waits until a key is pressed.
#
# Usage:
#
#   run_and_wait CMD [ARG1 ARG2 ...]
#
# Executes CMD with the arguments ARG1, ARG2, ... (if specified). After CMD has
# returned, prints a short message to stdout (see below) and waits until the
# user has pressed a key. Then terminates.
#
# This little script is intended to execute console programs in a separate
# XTerm window. After the program has finished, the window is kept open until
# the user presses a key, so the user can see any messages the program might
# have printed to stdout or stderr, especially error messages.

program_name=run_and_wait

cmd=$1
shift

if [ ! "$cmd" ] ; then
  echo "$program_name: ERROR: missing command"
  exit 1
fi

$cmd "$@"
exit_code=$?

echo
echo "  Program has terminated (return code: $exit_code)"
echo "  Press any key to close window"
read -n 1


