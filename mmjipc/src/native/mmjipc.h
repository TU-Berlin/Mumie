/*
 * The MIT License (MIT)
 * 
 * Copyright (c) 2010 Technische Universitaet Berlin
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_mumie_ipc_unix_UnixLib */

#ifndef _Included_net_mumie_ipc_unix_UnixLib
#define _Included_net_mumie_ipc_unix_UnixLib
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    open
 * Signature: (Ljava/lang/String;ZZ)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_open
  (JNIEnv *, jclass, jstring, jboolean, jboolean);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    close
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_close
  (JNIEnv *, jclass, jint);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    remove
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_remove
  (JNIEnv *, jclass, jstring);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    umask
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_net_mumie_ipc_unix_UnixLib_umask
  (JNIEnv *, jclass, jstring);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    chmod
 * Signature: (IZZZZZZZZZ)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_chmod
  (JNIEnv *, jclass, jint, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    socket
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_socket
  (JNIEnv *, jclass);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    bind
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_bind
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    listen
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_listen
  (JNIEnv *, jclass, jint);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    accept
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_accept
  (JNIEnv *, jclass, jint);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    connect
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_connect
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    read
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_read__I_3BII
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    read
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_read__I_3B
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    write
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_write__I_3BII
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    write
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_write__I_3B
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    strerror
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_net_mumie_ipc_unix_UnixLib_strerror
  (JNIEnv *, jclass);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    kill
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_kill
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    SIGINT
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_SIGINT
  (JNIEnv *, jclass);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    SIGQUIT
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_SIGQUIT
  (JNIEnv *, jclass);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    SIGABRT
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_SIGABRT
  (JNIEnv *, jclass);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    SIGKILL
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_SIGKILL
  (JNIEnv *, jclass);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    SIGALRM
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_SIGALRM
  (JNIEnv *, jclass);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    SIGTERM
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_SIGTERM
  (JNIEnv *, jclass);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    SIGCHLD
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_SIGCHLD
  (JNIEnv *, jclass);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    SIGCONT
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_SIGCONT
  (JNIEnv *, jclass);

/*
 * Class:     net_mumie_ipc_unix_UnixLib
 * Method:    SIGSTOP
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_mumie_ipc_unix_UnixLib_SIGSTOP
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
