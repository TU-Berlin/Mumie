<?xml version="1.0" encoding="ASCII"?>


<!--
  The MIT License (MIT)
  
  Copyright (c) 2010 Technische Universitaet Berlin
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
-->

<!--
   Author:  Tilman Rassy <rassy@math.tu-berlin.de>

   $Id: xsl_tutorial_user_problem_grades.content.xml,v 1.1 2009/06/03 22:30:56 rassy Exp $
-->

<xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:xsl-ext="http://www.mumie.net/xml-namespace/xsl-ext"
                xmlns:grades="http://www.mumie.net/xml-namespace/grades"
                xmlns:mumie="http://www.mumie.net/xml-namespace/document/metainfo"
                xmlns="http://www.w3.org/1999/xhtml"
                exclude-result-prefixes="xsl-ext grades">

<xsl-ext:import lid="xsl-util" internal="yes"/>
<xsl-ext:import lid="xsl-problem-grades-i18n" internal="yes"/>

<xsl:output method="xml"
            doctype-public="-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
            doctype-system="http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd"
            encoding="ASCII"/>

<xsl-ext:insert-japs-xsl-lib/>

<!-- ================================================================================ -->
<!-- h1: Global parameters abd variables                                              -->
<!-- ================================================================================ -->

<!-- Id of the course: -->
<xsl:variable name="course-id" select="/*/@course_id"/>

<!-- Id of the tutorial: -->
<xsl:variable name="tutorial-id" select="/*/@tutorial_id"/>

<!-- URL of the page (except "correct-worksheet" parameter): -->
<xsl:variable name="this-url">
  <xsl:value-of select="$xsl.url-prefix"/>
  <xsl:text>/protected/view/tutorial-user-problem-grades?course=</xsl:text>
  <xsl:value-of select="$course-id"/>
  <xsl:text>&amp;tutorial=</xsl:text>
  <xsl:value-of select="$tutorial-id"/>
</xsl:variable>

<!-- Number of corrected problems by the bulk correction -->
<xsl:variable name="num-corrections" select="//mumie:dynamic_data/mumie:param[@name='num-corrections']/@value"/>

<!-- Number of successful corrected problems by the bulk correction -->
<xsl:variable name="num-successful-corrections" select="//mumie:dynamic_data/mumie:param[@name='num-successful-corrections']/@value"/>
  
<!-- The bulk correction status: -->
<xsl:variable name="correction-status">
  <xsl:choose>
    <xsl:when test="$num-corrections != $num-successful-corrections">failed</xsl:when>
    <xsl:when test="$num-corrections = $num-successful-corrections">ok</xsl:when>
    <xsl:otherwise>none</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- HTML id of the 'div' element representing the correction status message dialog. -->
<xsl:variable name="correction-msg-html-id">_CORRECTION_MSG_</xsl:variable>

<!-- **** TUB SPECIFIEC START **** -->

<!-- Labels der HA-Blaetter, deren Bearbeitngszeitraum abgelaufen ist, in der Form
  +02+03+04+ fuer die Labels 02, 03, 04: -->
<xsl:variable name="labels-homework-done"></xsl:variable>

<!-- Labels der Prelearn-Blaetter, deren Bearbeitngszeitraum abgelaufen ist, in der Form
  +02+03+04+ fuer die Labels 02, 03, 04: -->
<xsl:variable name="labels-prelearn-done"></xsl:variable>

<!-- **** TUB SPECIFIEC END **** -->


<!-- ================================================================================ -->
<!-- h1: Keys                                                                         -->
<!-- ================================================================================ -->

<xsl:key name="user-problem-grade"
         match="/*/grades:user_problem_grade"
         use="concat(@user_id, ',', @ref_id)"/>

<xsl:key name="problem"
         match="/*/grades:problem"
         use="concat(@target, ',', @worksheet_id)"/>


<!-- ================================================================================ -->
<!-- h1: Message windows                                                              -->
<!-- ================================================================================ -->

<xsl:template name="correction-msg">
  <div class="dialog" id="{$correction-msg-html-id}">
    <table class="dialog">
      <thead>
        <tr>
          <td>
            <xsl:value-of select="$i18n-correction"/>
          </td>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="align-left">
            <xsl:call-template name="i18n-correction-msg-text"/>
          </td>
        </tr>
        <tr>
          <td class="buttons">
            <button type="button"
                    onclick="javascript:closeWindow('{$correction-msg-html-id}')">
              <xsl:value-of select="$i18n-close-window"/>
            </button>
         </td>
        </tr>
      </tbody>
    </table>
  </div>
</xsl:template>

<xsl:template name="correction-failed-msg">
  <div class="dialog" id="{$correction-msg-html-id}">
    <table class="dialog">
      <thead>
        <tr>
          <td class="error">
            <xsl:value-of select="$i18n-correction-failed"/>
          </td>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="align-left">
            <xsl:call-template name="i18n-correction-failed-msg-text"/>
          </td>
        </tr>
        <tr>
          <td class="buttons">
            <button type="button"
                    onclick="javascript:closeWindow('{$correction-msg-html-id}')">
              <xsl:value-of select="$i18n-close-window"/>
            </button>
         </td>
        </tr>
      </tbody>
    </table>
  </div>
</xsl:template>

<!-- ================================================================================ -->
<!-- h1: Creating grade tables                                                        -->
<!-- ================================================================================ -->

<xsl:template name="grades">
  <xsl:param name="target"/>
  <xsl:variable name="worksheets" select="/*/grades:worksheet[@target=$target]"/>
  <table class="genuine">
    <thead>
      <tr>
        <td rowspan="2" class="name">
          <xsl:value-of select="$i18n-name"/>
        </td>
        <td rowspan="2" class="id">
          <xsl:value-of select="$i18n-id"/>
        </td>
        <xsl:for-each select="$worksheets">
          <xsl:sort select="@label"/>
          <xsl:variable name="worksheet-id" select="@id"/>
          <xsl:variable name="problems"
            select="key('problem', concat($target, ',', $worksheet-id))"/>
          <td colspan="{count($problems)}">
            <xsl:value-of select="concat($i18n-worksheet-abbrev, '&#160;', @label)"/>
          </td>
        </xsl:for-each>
        <td rowspan="2">
          <xsl:value-of select="$i18n-abbrev-sum"/>
        </td>
      </tr>
      <tr>
        <xsl:for-each select="$worksheets">
          <xsl:sort select="@label"/>
          <xsl:variable name="worksheet-id" select="@id"/>
          <xsl:for-each 
            select="key('problem', concat($target, ',', $worksheet-id))">
            <xsl:sort select="@label"/>
            <td>
              <xsl:call-template name="td-class"/>
              <xsl:value-of select="concat($i18n-problem-abbrev, '&#160;', @label)"/>
            </td>
          </xsl:for-each>
        </xsl:for-each>
      </tr>
    </thead>
    <tfoot>
      <tr>
        <td rowspan="2" colspan="2" class="label">
          <xsl:value-of select="$i18n-abbrev-max"/>
        </td>
        <xsl:for-each select="$worksheets">
          <xsl:sort select="@label"/>
          <xsl:variable name="worksheet-id" select="@id"/>
          <xsl:for-each
            select="key('problem', concat($target, ',', $worksheet-id))">
            <xsl:sort select="@label"/>
            <td>
                <xsl:call-template name="td-class"/>
                <xsl:value-of select="@points"/>
            </td>
          </xsl:for-each>
        </xsl:for-each>
        <td rowspan="2">
          <xsl:value-of select="sum(/*/grades:problem[@target=$target]/@points)"/>
        </td>
      </tr>
      <tr>
        <xsl:for-each select="$worksheets">
          <xsl:sort select="@label"/>
          <xsl:variable name="worksheet-id" select="@id"/>
          <xsl:variable name="problems"
            select="key('problem', concat($target, ',', $worksheet-id))"/>
          <td colspan="{count($problems)}">
            <xsl:value-of
              select="sum($problems/@points)"/>
          </td>
        </xsl:for-each>
      </tr>
      <tr>
        <td colspan="2" class="label">
          <!-- Void, start of correction row -->
        </td>
        <xsl:for-each select="$worksheets">
          <xsl:sort select="@label"/>
          <xsl:variable name="worksheet-id" select="@id"/>
          <xsl:variable name="problems"
            select="key('problem', concat($target, ',', $worksheet-id))"/>
          <td colspan="{count($problems)}">
            <xsl:if test="( @category='homework' and contains($labels-homework-done, concat('+', @label, '+')) ) or ( @category='prelearn' and contains($labels-prelearn-done, concat('+', @label, '+')) )">
              <button>
                <xsl:attribute name="type">button</xsl:attribute>
                <xsl:attribute name="onclick">
                  <xsl:text>javascript:window.location.href='</xsl:text>
                  <xsl:value-of select="$this-url"/>
                  <xsl:text>&amp;correct-worksheet=</xsl:text>
                  <xsl:value-of select="$worksheet-id"/>
                  <xsl:text>'</xsl:text>
                </xsl:attribute>
                <xsl:value-of select="$i18n-correct"/>
              </button>
            </xsl:if>
          </td>
        </xsl:for-each>
        <td>
          <!-- Void, end of correction row -->
        </td>
      </tr>
    </tfoot>
    <tbody>
      <xsl:for-each select="/*/grades:user">
        <xsl:sort select="@surname"/>
        <xsl:sort select="@first_name"/>
        <xsl:variable name="user-id" select="@id"/>
	<xsl:variable name="student-name" select="concat(@surname, ',&#160;', @first_name)"/>
        <tr onmouseover="style.backgroundColor='#C6E2FF'" onmouseout="style.backgroundColor='white'">
          <td class="name">
            <xsl:value-of select="$student-name"/>
          </td>
          <td class="id">
            <xsl:value-of select="@id"/>
          </td>
          <xsl:for-each select="$worksheets">
            <xsl:sort select="@label"/>
            <xsl:variable name="worksheet-id" select="@id"/>
	    <xsl:variable name="worksheet-name" select="@label"/>
            <xsl:for-each
              select="key('problem', concat($target, ',', $worksheet-id))">
              <xsl:sort select="@label"/>
              <xsl:variable name="ref-id" select="@ref_id"/>
              <xsl:variable name="grade"
                select="key('user-problem-grade', concat($user-id, ',', $ref-id))"/>
              <td title="{concat($student-name, ',&#160;',
				 $i18n-worksheet-abbrev, ',&#160;',
				 $worksheet-name, '&#160;',
				 $i18n-problem-abbrev, '&#160;',
				 @label)}">
                <xsl:call-template name="td-class"/>
                <xsl:choose>
                  <xsl:when test="$grade/@status='correction'">
                    <xsl:value-of select="$grade/@result"/>
                  </xsl:when>
                  <xsl:when test="$grade/@status='answers'">
                    <xsl:value-of select="$i18n-abbrev-not-corrected"/>
                  </xsl:when>
                  <xsl:when test="$grade/@status='void'">
                    <xsl:value-of select="$i18n-abbrev-not-edited"/>
                  </xsl:when>
                </xsl:choose>
              </td>
            </xsl:for-each>
          </xsl:for-each>
          <td>
            <xsl:value-of
              select="round(sum(/*/grades:user_problem_grade
                      [@user_id=$user-id and @target=$target and @status='correction']/@result)
                      * 10) div 10"/>
          </td>
        </tr>
      </xsl:for-each>
    </tbody>
  </table>
</xsl:template>

<!-- ================================================================================ -->
<!-- h1: Auxiliary templates                                                          -->
<!-- ================================================================================ -->

<xsl:template name="td-class">
  <xsl:attribute name="class">
    <xsl:choose>
      <xsl:when test="position()=1">first</xsl:when>
      <xsl:when test="position()=last()">last</xsl:when>
      <xsl:otherwise>inner</xsl:otherwise>
    </xsl:choose>
  </xsl:attribute>
</xsl:template>

<xsl:template name="javascript">
  <!-- Insert the javascript for popup "windows" from xsl-util: -->
  <!-- (TODO: Check if param 'main' should be set) -->
  <xsl:call-template name="popup-javascript"/>

  <!-- Called by the 'onload' handler of the 'body' element:-->
  function initPage ()
  {
    <xsl:if test="$correction-status!='none'">
      popupCentered("<xsl:value-of select="$correction-msg-html-id"/>");
    </xsl:if>
  }
</xsl:template>

<!-- ================================================================================ -->
<!-- h1: Creating the page                                                            -->
<!-- ================================================================================ -->

<xsl:template match="/">
  <html>
    <head>
      <title>
        <xsl:value-of select="$i18n-title-tutorial"/>
      </title>
      <link rel="stylesheet" type="text/css">
        <xsl:attribute name="href"><xsl-ext:url lid="css-base"/></xsl:attribute> 
      </link>
      <link rel="stylesheet" type="text/css">
        <xsl:attribute name="href"><xsl-ext:url lid="css-grades"/></xsl:attribute> 
      </link>
      <script type="text/javascript">
        <xsl:call-template name="javascript"/>
      </script>
    </head>
    <body onload="javascript:initPage()">
      <xsl:call-template name="top-bar"/>
      <div class="main-bounded-width">
        <h1><xsl:value-of select="$i18n-headline-tutorial"/></h1>
        <table class="list">
          <tr>
            <td class="list-label"><xsl:value-of select="$i18n-course"/>:</td>
            <td><xsl:value-of select="/*/@course_name"/></td>
          </tr>
          <tr>
            <td class="list-label"><xsl:value-of select="$i18n-tutorial"/>:</td>
            <td><xsl:value-of select="/*/@tutorial_name"/></td>
          </tr>
        </table>
        
        <!-- For each type of homework a grades table -->
        <xsl:for-each select="/*/grades:target">
          <xsl:variable name="worksheets" select="/*/grades:worksheet[@target=current()/@name]"/>
          <xsl:if test="count($worksheets) != 0">
            <h2><xsl:value-of select="@title"/></h2>
            <xsl:call-template name="grades">
              <xsl:with-param name="target" select="@name"/>
              <xsl:with-param name="worksheets" select="$worksheets"/>
            </xsl:call-template>
          </xsl:if>
        </xsl:for-each>

      </div>
      <xsl:choose>
        <xsl:when test="$correction-status='ok'">
          <xsl:call-template name="correction-msg"/>
        </xsl:when>
        <xsl:when test="$correction-status='failed'">
          <xsl:call-template name="correction-failed-msg"/>
        </xsl:when>
      </xsl:choose>
    </body>
  </html>
</xsl:template>

</xsl:stylesheet>
